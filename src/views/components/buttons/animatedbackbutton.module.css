.backButton {
  /* Sizing via CSS vars so you can override from the component style prop if needed */
  --btn-size: 44px;         /* square button size */
  --scale: 0.76;            /* inner drawing scale (based on original 58px artboard height) */

  appearance: none;
  width: var(--btn-size);
  height: var(--btn-size);
  border-radius: 12px;
  border: 1px solid var(--sidebar-border, #e2e8f0);
  background: rgba(120,130,150,0.08);
  color: var(--sidebar-text, #1e293b);

  display: inline-flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  position: relative;
  outline: none;

  transition: background 0.2s ease, border-color 0.2s ease, transform 0.12s ease-out;
}

.backButton:hover {
  background: var(--sidebar-hover, #f1f5f9);
  border-color: var(--color-primary, #3b82f6);
}

.backButton:active {
  transform: scale(0.98);
}

.backButton:focus-visible {
  box-shadow: 0 0 0 3px var(--color-primary-light, rgba(59,130,246,0.25));
}

/* Inner drawing board using your original dimensions scaled down */
.lines {
  position: relative;
  width: calc(70px * var(--scale));
  height: calc(58px * var(--scale));
  pointer-events: none; /* keep events on button */
}

/* The three lines from your original snippet */
.line {
  position: absolute;
  left: 0;
  width: calc(70px * var(--scale));
  height: calc(6px * var(--scale));
  border-radius: 6px;
  background-color: currentColor;
  transition: transform 0.3s ease, width 0.3s ease, border-radius 0.3s ease, opacity 0.2s ease;
  will-change: transform, width;
}

/* Original vertical spacing (scaled) */
.line1 { top: 0; }
.line2 { top: calc(18px * var(--scale)); }
.line3 { top: calc(36px * var(--scale)); }

/* Always render in "back" chevron state (pointing left) */
.line1 {
  /* rotate up-left arm */
  transform-origin: left center;
  transform: rotate(-35deg) scaleX(0.55) translate(calc(-39px * var(--scale)), calc(-4.5px * var(--scale)));
  border-radius: 50px 0 0 50px;
}

.line3 {
  /* rotate down-left arm */
  transform-origin: left center;
  transform: rotate(35deg) scaleX(0.55) translate(calc(-39px * var(--scale)), calc(4.5px * var(--scale)));
  border-radius: 50px 0 0 50px;
}

.line2 {
  /* shorten middle line to match arrow spine */
  width: calc(45px * var(--scale));
  border-top-left-radius: 50px;
  border-bottom-left-radius: 50px;
}

/* Optional pressed state (apply data-pressed="true" or .pressed class on button) */
.backButton[data-pressed="true"] .line1,
.pressed .line1 {
  transform: rotate(-40deg) scaleX(0.5) translate(calc(-41px * var(--scale)), calc(-5px * var(--scale)));
}
.backButton[data-pressed="true"] .line3,
.pressed .line3 {
  transform: rotate(40deg) scaleX(0.5) translate(calc(-41px * var(--scale)), calc(5px * var(--scale)));
}
.backButton[data-pressed="true"] .line2,
.pressed .line2 {
  width: calc(42px * var(--scale));
}

/* Dark mode polish (uses your data-theme) */
[data-theme="dark"] .backButton {
  border-color: var(--sidebar-border, #334155);
  background: rgba(255,255,255,0.06);
  color: var(--sidebar-text, #e2e8f0);
}
[data-theme="dark"] .backButton:hover {
  background: #232e41;
}