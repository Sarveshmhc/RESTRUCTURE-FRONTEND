.headerBar {
  /* authoritative: header follows sidebar tokens exactly */
  background: var(--header-bg) !important;
  color: var(--header-text) !important;
  border-bottom: 1px solid var(--header-border) !important;
  box-shadow: none !important;

  /* remove glass / gradients / shadows so header is identical to sidebar */
  background-image: none !important;
  -webkit-backdrop-filter: none !important;
  backdrop-filter: none !important;
  border-radius: 0 !important;

  /* layout */
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 1rem;
  width: 100%;
  position: relative !important;
  z-index: var(--z-header, 95);
}

/* ensure header background uses token so contrast calculations are consistent */
.headerBar {
  background: var(--header-bg) !important;
  color: var(--header-text) !important;
  z-index: 220; /* keep header above sidebar */
}

/* Ensure header children DON'T accidentally overwrite interactive controls,
   but avoid a blanket rule that clears button backgrounds. Use scoped resets if needed. */
.headerBar > :not(button) {
  background: transparent; /* non-forced reset for non-button children */
}

/* Dark-mode keeps the same tokens */
.headerBar[data-theme="dark"],
[data-theme="dark"] .headerBar {
  background: var(--header-bg) !important;
  color: var(--header-text) !important;
  border-bottom: 1px solid var(--header-border) !important;
}

/* hamburger container / left slot */
.headerLeft {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  flex: 0 0 auto;
  width: 64px;
  padding-left: 8px;
  z-index: 230;
}

/* Left section - ensure no gaps */
.headerLeft {
  flex: 0 0 auto;
  width: 60px;
}

/* Mobile hamburger button */
.mobileHamburger {
  display: none; /* media query controls visibility */
  align-items: center;
  justify-content: center;
  width: 44px;
  height: 44px;
  border-radius: 8px;
  border: none;
  background: rgba(255,255,255,0.04); /* subtle contrast on dark/bg */
  color: var(--header-text, #fff);
  cursor: pointer;
  padding: 6px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.12);
  -webkit-tap-highlight-color: transparent;
}

.mobileHamburger:hover {
  background: var(--sidebar-hover, #f1f5f9);
}

.hamburgerBar {
  display: block;
  width: 18px;
  height: 2px;
  background-color: currentColor;
  margin: 2px 0;
  border-radius: 1px;
}

/* Strong explicit hamburger rules (covers both class names) */
.headerBar .mobileHamburger {
  display: inline-flex !important;
  flex-direction: column;       /* stack bars vertically */
  gap: 4px;                     /* vertical spacing between bars */
  align-items: center;
  justify-content: center;
  width: 44px;
  height: 44px;
  padding: 8px;                 /* comfortable hit area */
  background: rgba(255,255,255,0.04) !important;
  color: var(--header-text) !important;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.06) !important;
}

/* Ensure bars are identical and animate smoothly */
.headerBar .mobileHamburger {
  transition: background 180ms ease, transform 360ms cubic-bezier(.2,.9,.3,1);
  -webkit-tap-highlight-color: transparent;
}

/* Explicit bar sizing + smooth transform */
.headerBar .mobileHamburger .hamburgerBar,
.headerBar .mobileHamburger .hamburgerLine {
  width: 20px !important;           /* equal length for all bars */
  height: 2px !important;
  border-radius: 2px !important;
  background-color: currentColor !important;
  transition: transform 360ms cubic-bezier(.2,.9,.3,1), opacity 200ms ease, width 200ms ease;
  transform-origin: center;
  display: block !important;
}

/* Per-bar selectors used by TSX */
.headerBar .mobileHamburger .bar1 { transform: translateY(0) rotate(0); }
.headerBar .mobileHamburger .bar2 { transform: translateY(0) scaleX(1); }
.headerBar .mobileHamburger .bar3 { transform: translateY(0) rotate(0); }

/* Animated "open" state -> morph to X */
.headerBar .mobileHamburger.open .bar1 {
  transform: translateY(6px) rotate(45deg);
  width: 20px !important;
}
.headerBar .mobileHamburger.open .bar2 {
  opacity: 0;
  transform: scaleX(0.2);
}
.headerBar .mobileHamburger.open .bar3 {
  transform: translateY(-6px) rotate(-45deg);
  width: 20px !important;
}

/* subtle pressed / active feedback */
.headerBar .mobileHamburger:active .hamburgerBar,
.headerBar .mobileHamburger:active .hamburgerLine {
  transform: scale(0.98);
}

/* Center section */
.headerCenter {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  max-width: 600px;
  margin: 0 auto;
  padding: 0;
}

.searchWrapper {
  width: 100%;
  max-width: 500px;
  min-width: 300px;
}

/* Right section */
.headerRight {
  flex: 0 0 auto;
  display: flex;
  align-items: center;
  gap: 0.75rem; /* increased spacing so notification and theme buttons are not cramped */
  margin: 0;
  padding: 0;
}

/* Ensure action buttons don't visually collide */
.headerRight > button {
  margin: 0;
}

/* If you need explicit separation between specific buttons */
.headerRight .notificationWrapper {
  margin-right: 6px;
}

/* Notification / action button styling (match theme toggle) */
.actionButton {
  border-radius: 0.375rem;
  border: none;
  background: transparent;
  color: var(--header-text, #1e293b);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.15s ease;
  flex-shrink: 0;
  position: relative;
  outline: none;
  min-width: 44px;
  min-height: 44px;
  width: 44px;
  height: 44px;
  padding: 0.25rem;
}

.actionButton:hover {
  background: var(--sidebar-hover, #f1f5f9) !important;
}

/* Match theme toggle sizes */
.actionIcon {
  width: 22px;
  height: 22px;
  flex-shrink: 0;
  fill: currentColor;
  stroke: currentColor;
}

/* Notification badge positioning */
.notificationBadge {
  position: absolute;
  top: 8px;
  right: 8px;
  width: 8px;
  height: 8px;
  background: #ef4444;
  border-radius: 50%;
  border: 2px solid var(--header-bg, #ffffff);
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% { transform: scale(1); opacity: 1; }
  50% { transform: scale(1.2); opacity: 0.8; }
  100% { transform: scale(1); opacity: 1; }
}

/* Ensure theme toggle matches button styling exactly */
.headerRight .iconToggle {
  color: var(--header-text, #1e293b);
  border-radius: 0.375rem;
  margin: 0;
  padding: 0.25rem;
  min-width: 44px;
  min-height: 44px;
  width: 44px;
  height: 44px;
}

.headerRight .iconToggle:hover {
  background: var(--sidebar-hover, #f1f5f9) !important;
}

/* Dark theme tweaks */
[data-theme="dark"] .headerRight .iconToggle {
  color: #f1f5f9;
  background: #23263a;
}
[data-theme="dark"] .headerRight .iconToggle:hover {
  background: #374151 !important;
}

/* Responsive adjustments */
@media (max-width: 600px) {
  .searchWrapper {
    min-width: 150px;
    max-width: 250px;
  }
}
@media (min-width: 800px) and (max-width: 1024px) {
  .headerBar { padding: 0 2rem; } .searchWrapper { max-width: 450px; }
}
@media (min-width: 1025px) {
  .headerBar { padding: 0 2rem; }
  .headerRight { gap: 0.75rem; }
  .searchWrapper { max-width: 500px; }
}

/* Accessibility focus states */
.actionButton:focus-visible,
.headerRight .iconToggle:focus-visible {
  outline: 2px solid var(--focus-color, #2563eb);
  outline-offset: 2px;
}

/* show on tablet and below */
@media (max-width: 1024px) {
  .mobileHamburger {
    display: inline-flex !important;
  }
}

/* also allow showing when sidebar collapsed on desktop (optional) */
/* .sidebarWrapper.collapsed + .mainArea .headerBar .mobileHamburger { display:inline-flex !important; } */

/* keep header overflow visible so the button won't be clipped */
.headerBar, .headerLeft { overflow: visible; }

