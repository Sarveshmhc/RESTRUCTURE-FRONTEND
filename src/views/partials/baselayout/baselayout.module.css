/* Base layout - updated: base color = white, header matches sidebar color */

.layoutWrapper {
  display: flex;
  height: 100vh;
  width: 100vw;
  /* force base page color to white (scoped) */
  --bg: #ffffff;
  background: var(--bg);
  position: relative;
  overflow: hidden;
  margin: 0;
  padding: 0;
  border: none;
  outline: none;
}

.headerRow {
  display: flex;
  height: 4rem;
  flex-shrink: 0;
  /* Remove any borders or gaps */
  border: none;
  margin: 0;
  padding: 0;
  align-items: stretch;
  width: 100%;

  /* Make header visually match the sidebar */
  background: var(--sidebar-bg, linear-gradient(180deg,#ffffff,#f8fafc));
  color: var(--sidebar-text, #111827);
  border-bottom: 1px solid var(--sidebar-border, rgba(15,23,42,0.06));
  box-shadow: none;
}

/* content row layout */
.contentRow {
  display: flex;
  flex: 1;
  min-height: 0;
  /* Remove any borders or gaps */
  border: none;
  margin: 0;
  padding: 0;
}

.sidebarWrapper {
  --sidebar-width: 18rem;
  width: var(--sidebar-width);
  height: 100vh;
  position: relative;
  z-index: 100;
  flex-shrink: 0;
  overflow: visible;
  transition: width 0.35s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: width;
  border: none;
  margin: 0;
  padding: 0;
  background: transparent; /* let the inner aside paint background to avoid double layer */
  outline: none;
}

.sidebarWrapper.collapsed {
  --sidebar-width: 4rem;
  width: var(--sidebar-width);
}

/* Off-canvas behavior when layout marks sidebar as mobile (effective up to 1024px) */
.sidebarWrapper.mobile {
  position: fixed;
  top: 0;
  left: 0;
  height: 100vh;
  --sidebar-width: var(--mobile-sidebar-width, 280px);
  width: var(--sidebar-width);
  transform: translateX(-100%);
  z-index: 1000;
  box-shadow: none;
  overflow: hidden; /* hide inner while sliding to avoid dual-layer look */
  transition: transform 0.35s cubic-bezier(0.25, 0.46, 0.45, 0.94),
              box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: transform;
  backface-visibility: hidden;
}

.sidebarWrapper.mobile.mobileOpen {
  transform: translateX(0);
  box-shadow: 2px 0 12px rgba(0,0,0,0.15);
}

/* Avoid showing a static 4rem rail while in mobile mode */
.sidebarWrapper.mobile.collapsed {
  --sidebar-width: var(--mobile-sidebar-width, 280px);
  width: var(--sidebar-width);
}

.mainArea {
  flex: 1;
  display: flex;
  flex-direction: column;
  height: 100vh;
  margin: 0;
  padding: 0;
  background: var(--bg);
  position: relative;
  overflow: hidden; /* prevent main wrapper from scrolling */
}

/* contentArea becomes the only vertical scroll container */
.contentArea {
  flex: 1;
  padding: 1.5rem 2rem;
  background: var(--content-bg) !important;
  color: var(--content-text) !important;
  overflow-y: auto; /* content scrolls here */
  position: relative;
}

/* Ensure main area and content text use theme tokens (light & dark) */
.mainArea,
.contentArea,
.appMain,
.main-content,
.page {
  color: var(--text, #0f1724) !important;
  background: var(--bg, #ffffff) !important;
}

/* -------- Safer, theme-aware content rendering (replace previous aggressive overrides) --------
   Uses theme tokens (var(--text), --content-text / --content-bg) and avoids blanket !important
   and universal selectors which caused the "layered/faded" text in dark mode.
-------------------------------------------------------------------------------------------*/

/* Base content area: respect theme tokens and keep normal blending */
.mainArea,
.contentArea {
  position: relative;
  isolation: isolate;               /* avoid unexpected blend from ancestors */
  mix-blend-mode: normal;           /* ensure normal text rendering */
  filter: none;
  -webkit-backdrop-filter: none;
  backdrop-filter: none;
  color: var(--content-text, var(--text));   /* respects light/dark tokens */
  background: var(--content-bg, var(--bg));
  opacity: 1;
  -webkit-text-fill-color: unset;
  transition: color 180ms ease, background 240ms ease;
}

/* Headings / paragraphs inside content: explicit, token-driven colors */
.mainArea h1,
.mainArea h2,
.mainArea h3,
.mainArea h4,
.contentArea h1,
.contentArea h2,
.contentArea h3,
.contentArea h4,
.contentArea p,
.pageTitle,
.pageSubtitle {
  color: var(--content-text, var(--text));
  opacity: 1;
  text-shadow: none;
  -webkit-text-fill-color: unset;
}

/* Avoid blanket resets on all descendants â€” fix only known problematic elements */
.welcomeCard,
.welcomeCard h1,
.welcomeCard p {
  position: relative;
  z-index: 2;
  color: var(--content-text, var(--text));
  mix-blend-mode: normal;
  opacity: 1;
  text-shadow: none;
  filter: none;
  -webkit-backdrop-filter: var(--content-backdrop, none); /* Safari/iOS support */
  backdrop-filter: var(--content-backdrop, none); /* optional glass support via token */
}

/* Defensive: neutralize obvious global overlays but scoped to known overlay classes only */
.mobileOverlay,
.overlay,
.pageOverlay,
.globalOverlay {
  display: none;
  visibility: hidden;
  pointer-events: none;
}

/* Defensive fixes for ghosted / semi-opaque content (dark mode overlay issues) */
/* Force content area and its children to be fully visible and above accidental overlays */
.mainArea,
.contentArea {
  opacity: 1 !important;
  color: --text, #000000 !important;
  -webkit-text-fill-color: unset !important;
  mix-blend-mode: normal !important;
  isolation: isolate !important; /* avoid blend from ancestors */
}

/* Ensure direct children render above any accidental translucent pseudo-layers */
.contentArea > * {
  position: relative !important;
  z-index: 2 !important;
  opacity: 1 !important;
  mix-blend-mode: normal !important;
  -webkit-text-fill-color: unset !important;
  text-shadow: none !important;
}

/* Remove accidental overlay pseudo-elements on content/main area */
.mainArea::before,
.mainArea::after,
.contentArea::before,
.contentArea::after {
  display: none !important;
  content: none !important;
  pointer-events: none !important;
  background: transparent !important;
}

/* Neutralize common overlay classes that might be left visible accidentally */
.mobileOverlay,
.overlay,
.pageOverlay,
.globalOverlay {
  display: none !important;
  visibility: hidden !important;
  pointer-events: none !important;
}

/* Defensive: if any element sets very low opacity via inline style, restore it inside content */
.mainArea *[style*="opacity"],
.contentArea *[style*="opacity"] {
  opacity: 1 !important;
}

/* Respect reduced motion / accessibility (don't interfere) */
@media (prefers-reduced-motion: reduce) {
  .contentArea > * { transition: none !important; }
}

/* Strong defensive reset for content text rendering (fixes ghosted / layered text in dark mode) */
.contentArea,
.contentArea * {
  /* normal blending / no filters */
  mix-blend-mode: normal !important;
  filter: none !important;
  -webkit-backdrop-filter: none !important;
  backdrop-filter: none !important;

  /* ensure full opacity / correct color */
  opacity: 1 !important;
  color: --text, #000000 !important;
  -webkit-text-fill-color: unset !important;
  text-shadow: none !important;

  /* avoid being clipped or rendered in an isolated stacking context */
  isolation: isolate !important;
  position: relative !important;
}

/* Make sure pseudo-elements are not left visible above content */
.contentArea::before,
.contentArea::after,
.contentArea *::before,
.contentArea *::after {
  display: none !important;
  content: none !important;
  background: transparent !important;
  pointer-events: none !important;
}

/* Specific fix for the welcome card / hero area where text was faded */
.welcomeCard,
.welcomeCard * {
  mix-blend-mode: normal !important;
  color: --text, #000000 !important;
  opacity: 1 !important;
  -webkit-text-fill-color: unset !important;
  text-shadow: none !important;
  filter: none !important;
  backdrop-filter: none !important;
  position: relative !important;
  z-index: 2 !important;
}

/* Mobile responsive styles - Clean and optimized */
@media (max-width: 799px) {
  .layoutWrapper {
    display: flex;
    flex-direction: column;
    height: 100vh;
    overflow: hidden;
    background: var(--bg);
  }

  .contentRow {
    position: relative;
    flex: 1;
  }

  .sidebarWrapper {
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    width: var(--mobile-sidebar-width, 280px);
    transform: translateX(-100%);
    z-index: 1000;
    box-shadow: none;
    transition: transform 0.35s cubic-bezier(0.25, 0.46, 0.45, 0.94),
                box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1);
    will-change: transform;
    backface-visibility: hidden;
  }

  /* When collapsed on mobile or when using desktop-collapse while in mobile viewport,
     keep a narrow icons-only rail visible instead of hiding completely. */
  .sidebarWrapper.collapsed {
    transform: translateX(0);
    width: 4rem; /* icons-only rail width */
  }

  /* If mobileOpen is active, fully show the menu */
  .sidebarWrapper.mobileOpen {
    transform: translateX(0);
    width: var(--mobile-sidebar-width, 280px);
    box-shadow: 2px 0 12px rgba(0,0,0,0.15);
  }

  .sidebarWrapper.mobile {
    position: fixed; /* kept for backward compatibility */
    z-index: 1000; /* ensured above content */
  }

  .sidebarWrapper.mobileOpen {
    transform: translateX(0);
    box-shadow: 2px 0 12px rgba(0, 0, 0, 0.15);
  }

  .mobileOverlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.6); /* Slightly darker for better contrast */
    z-index: 999;
    animation: fadeIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    -webkit-backdrop-filter: blur(1px); /* Safari/iOS support */
    backdrop-filter: blur(1px); /* Subtle blur for modern feel */
  }

  @keyframes fadeIn {
    from { 
      opacity: 0; 
      -webkit-backdrop-filter: blur(0px);
      backdrop-filter: blur(0px);
    }
    to { 
      opacity: 1; 
      -webkit-backdrop-filter: blur(1px);
      -webkit-backdrop-filter: blur(1px);
      -webkit-backdrop-filter: blur(1px);
      -webkit-backdrop-filter: blur(1px);
      -webkit-backdrop-filter: blur(1px);
      -webkit-backdrop-filter: blur(1px);
      backdrop-filter: blur(1px);
    }
  }

  .mainArea {
    flex: 1;
    display: flex;
    flex-direction: column;
    width: 100%;
  }

  .contentArea {
    flex: 1;
    padding: 1.5rem 1.25rem;
    background: var(--bg); /* use theme background */
    border-radius: 0;
    box-shadow: none;
    overflow-y: auto;
  }
}

/* Mobile overlay (global so it works up to 1024px as well) */
.mobileOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  /* Use a theme-aware overlay color so dark theme doesn't reveal white content */
  background-color: rgba(0, 0, 0, 0.6);
  z-index: 999;
  animation: fadeIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  -webkit-backdrop-filter: blur(1px);
  backdrop-filter: blur(1px);
}

/* When mobile menu is open, lock body scroll to prevent background movement */
body.mobile-open {
  overflow: hidden;
  position: relative;
}

/* Tablet responsive styles - Clean and balanced */
@media (min-width: 800px) and (max-width: 1024px) {
  .sidebarWrapper {
    width: 16rem; /* Smaller sidebar for tablet */
  }

  .sidebarWrapper.collapsed {
    width: 4rem;
  }

  .contentArea {
    padding: 1.75rem 2rem;
    background: var(--tablet-content-background, var(--bg));
    border-radius: 0;
  }
}
